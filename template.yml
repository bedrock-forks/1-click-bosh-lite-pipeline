resources:
- name: 1-click
  type: git
  source:
    uri: https://github.com/petergtz/1-click-bosh-lite-pipeline.git

- name: state
  type: git
  source:
    uri: ((state_git_repo))
    branch: master
    private_key: ((github-private-key))
    disable_ci_skip: true

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: main

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment.git

- name: ((bosh_lite_name))-recreation-events
  type: semver
  source:
    driver: git
    uri: ((state_git_repo))
    branch: events
    file: events-bosh-lites-((bosh_lite_name))-created
    private_key: ((github-private-key))

- name: ((bosh_lite_name))-ready-for-deployment-events
  type: semver
  source:
    driver: git
    uri: ((state_git_repo))
    branch: events
    file: events-bosh-lites-((bosh_lite_name))-ready
    private_key: ((github-private-key))

- name: ((bosh_lite_name))-cf-deployment-events
  type: semver
  source:
    driver: git
    uri:  ((state_git_repo))
    branch: events
    file: events-bosh-lites-((bosh_lite_name))-deployments-cf-deleted
    private_key: ((github-private-key))

- name: every-night
  type: time
  source:
    start: 1:00 AM
    stop: 2:00 AM

jobs:
- name: delete-((bosh_lite_name))
  serial: true
  serial_groups: [ ((bosh_lite_name)) ]
  plan:
  - in_parallel:
    - get: 1-click
    - get: ((bosh_lite_name))-recreation-events
      params: { bump: major }
    - get: state
  - task: bosh delete-env
    file: 1-click/tasks/bosh-delete-env.yml
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))
      MANIFEST: ((bosh-manifest))
  - put: state
    params:
      repository: out-state
      rebase: true
  - put: ((bosh_lite_name))-recreation-events
    params:
      file: ((bosh_lite_name))-recreation-events/number

- name: recreate-((bosh_lite_name))
  serial: true
  serial_groups: [ ((bosh_lite_name)) ]
  plan:
  - in_parallel:
    - get: 1-click
    - get: ((bosh_lite_name))-recreation-events
      params: { bump: major }
      trigger: true
      passed: [ delete-((bosh_lite_name)) ]
    - get: state
  - task: bosh create-env
    file: 1-click/tasks/bosh-create-env.yml
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))
      MANIFEST: ((bosh-manifest))
      DOMAIN_NAME: ((sl_vm_domain))

  - put: state
    params:
      repository: out-state
      rebase: true
  - put: ((bosh_lite_name))-recreation-events
    params:
      file: ((bosh_lite_name))-recreation-events/number

- name: Show BOSH summary for ((bosh_lite_name))
  plan:
  - in_parallel:
    - { get: 1-click, trigger: true }
    - get: state
    - get: ((bosh_lite_name))-recreation-events
      trigger: true
      passed: [ recreate-((bosh_lite_name)) ]
  - task: Show Summary
    file: 1-click/tasks/show-summary.yml
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))
      DOMAIN_NAME: ((sl_vm_domain))

- name: update-cloud-and-runtime-config-((bosh_lite_name))
  serial_groups: [ ((bosh_lite_name)) ]
  plan:
  - in_parallel:
    - get: ((bosh_lite_name))-recreation-events
      trigger: true
      passed: [recreate-((bosh_lite_name))]
    - { get: 1-click }
    - { get: cf-deployment, trigger: true }
    - { get: bosh-deployment }
    - get: state
    - get:  ((bosh_lite_name))-ready-for-deployment-events
      params: { bump: major }
  - in_parallel:
    - task: Update cloud-config
      file: 1-click/tasks/update-cloud-config.yml
      input_mapping:
        cf-deployment: cf-deployment
      params:
        BOSH_LITE_NAME: ((bosh_lite_name))
    - task: Update runtime-config
      file: 1-click/tasks/update-runtime-config.yml
      params:
        BOSH_LITE_NAME: ((bosh_lite_name))
  - put: state
    params:
      repository: out-state
      rebase: true
  - put: ((bosh_lite_name))-ready-for-deployment-events
    params:
      file: ((bosh_lite_name))-ready-for-deployment-events/number

- name: delete-((bosh_lite_name))-cf-deployment
  serial: true
  serial_groups: [ ((bosh_lite_name)) ]
  plan:
  - in_parallel:
    - get: 1-click
    - get: ((bosh_lite_name))-cf-deployment-events
      params: { bump: major }
    - get: state
    - get:  ((bosh_lite_name))-ready-for-deployment-events
      params: { bump: major }
  - task: delete-deployment
    file: 1-click/tasks/bosh-delete-deployment.yml
    params:
      DEPLOYMENT_NAME: cf
      BOSH_LITE_NAME: ((bosh_lite_name))
  - in_parallel:
    - put: state
      params:
        repository: out-state
        rebase: true
    - put: ((bosh_lite_name))-cf-deployment-events
      params:
        file: ((bosh_lite_name))-cf-deployment-events/number
    - put: ((bosh_lite_name))-ready-for-deployment-events
      params:
        file: ((bosh_lite_name))-ready-for-deployment-events/number

- name: clean-up-((bosh_lite_name))
  serial: true
  plan:
  - in_parallel:
    - { get: 1-click }
    - { get: every-night, trigger: true }
    - get: state
  - task: bosh clean-up
    file: 1-click/tasks/bosh-clean-up.yml
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))

- name: cancel-cf-deployment-task-in-((bosh_lite_name))
  serial: true
  plan:
  - in_parallel:
    - { get: 1-click }
    - get: state
  - task: bosh -d cf cancel-task
    file: 1-click/tasks/bosh-cancel-task.yml
    params:
      BOSH_LITE_NAME: ((bosh_lite_name))
      DEPLOYMENT_NAME: cf
